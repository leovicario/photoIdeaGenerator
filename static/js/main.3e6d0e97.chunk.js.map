{"version":3,"sources":["data/ideas.js","result.jsx","chart.jsx","index.jsx","background.js","index.js"],"names":["Result","state","data","randomNum","generateData","Math","round","random","this","console","log","id","model","action","setting","light","React","Component","Chart","Index","p5","s","circle","x","y","size","setup","createCanvas","window","innerWidth","innerHeight","draw","display","move","windowResized","resizeCanvas","renderResult","ReactDOM","render","document","getElementById","animation","button","className","setTimeout","onClick"],"mappings":"mRAAgB,G,MAAA,CACZ,MAAS,CAAC,YAAa,WAAY,mBAAoB,eACvD,mBAAoB,UAAW,cAAe,gBAAiB,iBAC/D,eAAgB,cAGhB,MAAS,CAAC,WAAY,SAAU,UAAW,uBAAwB,cACnE,cAAe,QAAS,gBAAiB,gBAAiB,OAAQ,OAAQ,SAG1E,QAAW,CAAC,SAAU,OAAQ,WAAY,QAAS,QAAS,OAAQ,WACpE,OAAQ,cAAe,QAAS,YAAa,WAG7C,OAAU,CAAC,UAAW,2BAA4B,qBAAsB,qBACxE,cAAe,oBAAqB,wBAAyB,eAAgB,UAC7E,cCsBaA,G,kNAhCbC,MAAQ,CACJC,KAAMA,EACNC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,EAI9CC,aAAe,WAGX,OAFaC,KAAKC,MAAoB,GAAdD,KAAKE,W,EAKjCA,OAAS,WAEP,OADaF,KAAKC,MAAoB,GAAdD,KAAKE,W,uDAK3B,IAAIA,EAASC,KAAKP,MAAME,UAAUK,KAAKD,UAGzC,OAFEE,QAAQC,IAAIH,GAGd,yBAAKI,GAAG,UACF,uBAAGA,GAAG,cAAN,wBAAyCH,KAAKP,MAAMC,KAAKU,MAAMJ,KAAKD,UAApE,IAAgFC,KAAKP,MAAMC,KAAKW,OAAOL,KAAKD,UAA5G,SAA6HC,KAAKP,MAAMC,KAAKY,QAAQN,KAAKD,UAA1J,cAAgLC,KAAKP,MAAMC,KAAKa,MAAMP,KAAKD,WAC3M,2BAAMC,KAAKD,SAAUC,KAAKD,SAAUC,KAAKD,e,GA1BhCS,IAAMC,YCgBZC,G,kNAfXjB,MAAQ,CACJC,KAAMA,EACNC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,I,uDAIvC,OAEG,wC,GATSa,IAAMC,Y,OC2CXE,GCEI,I,OAAIC,IA7CR,SAACC,GAAO,IAuBfC,EAAS,IAvBK,WAKd,WAAaC,EAAGC,EAAGC,GAAO,oBACvBjB,KAAKe,EAAIA,EACTf,KAAKgB,EAAIA,EACThB,KAAKiB,KAAOA,EARD,mDAYVjB,KAAKe,GAAKF,EAAEd,QAAQ,GAAG,IACvBC,KAAKgB,GAAMH,EAAEd,QAAQ,GAAG,MAbd,gCAiBVc,EAAEC,OAAOd,KAAKe,EAAGf,KAAKgB,EAAGhB,KAAKiB,UAjBpB,KAuBL,CAAW,IAAI,GAAG,IAE/BJ,EAAEK,MAAQ,WACNL,EAAEM,aAAaC,OAAOC,WAAYD,OAAOE,cAG7CT,EAAEU,KAAO,WAKLT,EAAOU,UACPV,EAAOW,QAKXZ,EAAEa,cAAgB,WACdb,EAAEc,aAAaP,OAAOC,WAAaD,OAAOE,iB,4MDlChDM,aAAe,WACbC,IAASC,OACP,kBAAC,EAAD,MAAYC,SAASC,eAAe,WACpC,EAAKC,a,EAGLA,UAAY,WACV,IAAMC,EAASH,SAASC,eAAe,YACvCE,EAAOC,WAAa,WACpBC,YAAW,WACTF,EAAOC,UAAY,KAClB,M,uDAMP,OAGE,yBAAKhC,GAAG,aAER,wBAAIA,GAAG,SAAP,mBACA,uBAAGA,GAAG,YAAN,6DACA,4BAAQA,GAAG,WAAWkC,QAAWrC,KAAK4B,cAAtC,YACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA5BcpB,IAAMC,YEJ1BoB,IAASC,OACP,kBAAC,EAAD,MAAWC,SAASC,eAAe,W","file":"static/js/main.3e6d0e97.chunk.js","sourcesContent":[" export default {\r\n    \"model\": [\"a girl is\", \"a man is\", \"a young woman is\", \"an animal is\", \r\n    \"the landscape is\", \"you are\", \"a family is\", \"an old man is\", \"a fisherman is\",\r\n    \"the model is\", \"a child is\"],\r\n    \r\n    \r\n    \"light\": [\"daylight\", \"sunset\", \"sunrise\", \"artificial red light\", \"city lights\", \r\n    \"golden hour\", \"night\", \"morning light\", \"evening light\", \"mist\", \"rain\", \"storm\",],\r\n    \r\n    \r\n    \"setting\": [\"forest\", \"city\", \"mountain\", \"beach\", \"river\", \"lake\", \"interior\", \r\n    \"home\", \"coffee shop\", \"beach\", \"lost town\", \"railway\"],\r\n    \r\n    \r\n    \"action\": [\"running\", \"staring at the landscape\", \"staring at the sun\", \"looking at someone\", \r\n    \"pointing at\", \"holding an object\", \"looking at the camera\", \"looking away\", \"jumping\",\r\n    \"laughing\"]\r\n}\r\n","import React from 'react';\r\nimport * as data from \"./data/ideas.js\";\r\nimport './css/result.css';\r\n\r\nclass Result extends React.Component {\r\n\r\n    state = {\r\n        data: data.default,\r\n        randomNum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n    }\r\n\r\n         \r\n    generateData = () => {\r\n        let random = Math.round(Math.random()*10);\r\n        // this.setState({randomNum: random});\r\n        return random;\r\n    }\r\n\r\n    random = () => {\r\n      let random = Math.round(Math.random()*10);\r\n      return random;\r\n    }\r\n\r\n    render() {\r\n        let random = this.state.randomNum[this.random()];\r\n        console.log(random);\r\n        \r\n      return (\r\n      <div id=\"result\">\r\n            <p id=\"resultText\">Shoot an image where {this.state.data.model[this.random()]} {this.state.data.action[this.random()]} in a {this.state.data.setting[this.random()]} under the {this.state.data.light[this.random()]}</p>\r\n            <p>{}{this.random()}{this.random()}{this.random()}</p>\r\n        \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  \r\n  export default Result","import React from 'react';\r\nimport * as data from \"./data/ideas.js\";\r\nimport './css/chart.css';\r\n\r\nclass Chart extends React.Component {\r\n    state = {\r\n        data: data.default,\r\n        randomNum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        \r\n           <p>Henlo</p>\r\n        \r\n      \r\n        )}\r\n    \r\n}\r\n\r\nexport default Chart","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Result from './result.jsx'\nimport Chart from './chart.jsx'\nimport background from './background.js';\n\n\n\nclass Index extends React.Component {\n\n  renderResult = () => {\n    ReactDOM.render(\n      <Result />, document.getElementById('result'));\n      this.animation()\n      }\n\n      animation = () => {\n        const button = document.getElementById(\"generate\")\n        button.className += \"animated\";\n        setTimeout(function() {\n          button.className = \"\";\n        }, 400);\n     \n        \n      }\n\n  render() {\n    return (\n     \n     \n      <div id=\"container\">\n        \n      <h1 id=\"title\">Your next photo</h1>\n      <p id=\"subtitle\">Don't know what to shoot next? Get unstuck by pressing...</p>\n      <button id=\"generate\" onClick = {this.renderResult}>Generate</button>\n      <Result />\n      <Chart />\n      </div>\n    )\n      \n     \n      \n}\n}\n\n\nexport default Index","import p5 from 'p5';\r\n\r\n\r\n\r\nconst sketch = (s) => {\r\n\r\n    \r\n\r\n    class Circle {\r\n        constructor (x, y, size) {\r\n           this.x = x;\r\n           this.y = y;\r\n           this.size = size;\r\n        };\r\n    \r\n        move() {\r\n            this.x += s.random(-10,10);\r\n            this.y +=  s.random(-30,30);\r\n        }\r\n    \r\n        display() {\r\n            s.circle(this.x, this.y, this.size);\r\n        }\r\n    \r\n    }\r\n    \r\n    \r\n    let circle = new Circle(500,10,10);\r\n    \r\n    s.setup = () => {\r\n        s.createCanvas(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    s.draw = () => {\r\n        \r\n    \r\n     \r\n       \r\n        circle.display();\r\n        circle.move();\r\n        // for (let i = 10; i < 20; i++) {\r\n        //     s.circle(i*i, i*i, i*i);}\r\n    }\r\n\r\n    s.windowResized = () => {\r\n        s.resizeCanvas(window.innerWidth, (window.innerHeight));\r\n      }\r\n}\r\n\r\nconst background = new p5(sketch);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Index from './index.jsx'\r\n\r\n\r\nReactDOM.render(\r\n  <Index />, document.getElementById('root')\r\n);"],"sourceRoot":""}